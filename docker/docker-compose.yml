version: '3.8'

volumes:
  percona:

services:
  percona:
    image: percona/percona-server:8.4
    environment:
      MYSQL_ROOT_PASSWORD: ${PERCONA_ROOT_PASSWORD}
      MYSQL_DATABASE: ${PERCONA_DATABASE_NAME}
    volumes:
      - ./containers/percona/conf/my.cnf:/etc/my.cnf:ro
      - ./containers/percona/conf/my.cnf.d:/etc/my.cnf.d:ro
      - percona:/var/lib/mysql
    ports:
      - ${PERCONA_BIND}:3306
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${PERCONA_ROOT_PASSWORD}" ]
      interval: 1s
      timeout: 1s
      retries: 30

  rust:
    build:
      context: containers/rust-cargo-watch
    depends_on:
      percona:
        condition: service_healthy
    command: sh -c "cargo watch -x run --workdir=/code"
    environment:
      - APP_BIND=0.0.0.0:3000
      - DATABASE_URL=mysql://root:${PERCONA_ROOT_PASSWORD}@percona:3306/${PERCONA_DATABASE_NAME}
    ports:
      - ${RUST_BIND}:3000
    volumes:
      - ./../servers/rust:/code

  golang.fiber:
    image: cosmtrek/air
    working_dir: /application/fiber
    depends_on:
      percona:
        condition: service_healthy
    ports:
      - ${GOLANG_BIND}:80
    environment:
      - HTTP_SERVER_PORT=80
      - PERCONA_HOST=percona
      - PERCONA_PORT=3306
      - PERCONA_USERNAME=root
      - PERCONA_PASSWORD=${PERCONA_ROOT_PASSWORD}
      - PERCONA_DATABASE=${PERCONA_DATABASE_NAME}
    volumes:
      - ./../servers/golang/:/application/

  php8:
    build:
      context: containers/php8.3
    volumes:
      - ./containers/php8.3/conf/8.3/cli/php.ini:/etc/php/8.3/cli/php.ini:ro
      - ./containers/php8.3/conf/8.3/fpm/pool.d:/etc/php/8.3/fpm/pool.d:ro
      - ./containers/php8.3/conf/8.3/fpm/php.ini:/etc/php/8.3/fpm/php.ini:ro
      - ./containers/php8.3/conf/8.3/fpm/php-fpm.conf:/etc/php/8.3/fpm/php-fpm.conf:ro
      - ./../servers/php:/code
    environment:
      - DB_HOST=percona
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASS=${PERCONA_ROOT_PASSWORD}
      - DB_BASE=${PERCONA_DATABASE_NAME}
      - PASSPHRASE_BASE64=${PASSPHRASE_BASE64}
    depends_on:
      percona:
        condition: service_healthy

  nginx:
    build:
      context: ./containers/nginx
    volumes:
      - ./containers/nginx/conf/sites-enabled:/etc/nginx/sites-enabled:ro
      - ./containers/nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./../servers/php:/code
    depends_on:
      - php8
    ports:
      - ${PHP_BIND}:80

  python:
    build:
      context: ./containers/python
    volumes:
      - ./../servers/python/src:/code
    environment:
      - DB_HOST=percona
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASS=${PERCONA_ROOT_PASSWORD}
      - DB_BASE=${PERCONA_DATABASE_NAME}
    depends_on:
      percona:
        condition: service_healthy
    ports:
      - ${PYTHON_BIND}:80
    # command: tail -f /dev/null
    # command: sh -c "pip install --no-cache-dir -r requirements.txt; uvicorn src.main:app --host 0.0.0.0 --port 80 --reload"
    command: sh -c "uvicorn main:app --host 0.0.0.0 --port 80 --reload --workers 10"

  nest:
    build:
      context: ./containers/nodejs
    volumes:
      - ./../servers/nestjs:/code
    depends_on:
      percona:
        condition: service_healthy
    ports:
      - ${NEST_BIND}:80
    environment:
      - PORT=80
      - DB_HOST=percona
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASS=${PERCONA_ROOT_PASSWORD}
      - DB_BASE=${PERCONA_DATABASE_NAME}
    command: sh -c "npm i; npm run build; npm run start:prod"

  nest_fastify:
    build:
      context: ./containers/nodejs
    volumes:
      - ./../servers/nestjs-fastify:/code
    depends_on:
      percona:
        condition: service_healthy
    ports:
      - ${NEST_FASTIFY_BIND}:80
    environment:
      - PORT=80
      - DB_HOST=percona
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASS=${PERCONA_ROOT_PASSWORD}
      - DB_BASE=${PERCONA_DATABASE_NAME}
    command: sh -c "npm i; npm run build; npm run start:prod"

  express:
    build:
      context: ./containers/nodejs
    volumes:
      - ./../servers/express:/code
    depends_on:
      percona:
        condition: service_healthy
    ports:
      - ${EXPRESS_BIND}:80
    environment:
      - PORT=80
      - DB_HOST=percona
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASS=${PERCONA_ROOT_PASSWORD}
      - DB_BASE=${PERCONA_DATABASE_NAME}
    command: sh -c "npm i; npm run build; npm run start:prod"